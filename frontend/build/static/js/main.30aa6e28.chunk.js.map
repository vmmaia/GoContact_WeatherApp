{"version":3,"sources":["history.js","redux/actions/action-types.js","redux/reducers/search-reducer.js","redux/reducers/weather-reducer.js","redux/reducers/root-reducer.js","redux/store/store.js","components/footer/Footer.js","util/serialize-errors.js","backendURL.js","components/search/result-item.js","redux/actions/weather-actions.js","components/spinner/spinner.js","components/search/result-list.js","components/search/search.js","redux/actions/search-actions.js","components/weather-card/card.js","components/weather-card/card-list.js","components/graph/graph.js","components/table/table.js","pages/landing/Landing.js","pages/pageNotFound/PageNotFound.js","components/app/App.js","index.js"],"names":["createBrowserHistory","SEARCH","SEARCH_SET_QUERY","SEARCH_RESET","RETRIEVE_CITY","UPDATE_TIME","TABLE_SORT_BY","initialState","isSearching","showResults","results","query","error","reducer","state","action","type","payload","cities","table","sortBy","order","entries","find","city","name","map","time","column","sortedArray","sort","city1","city2","dataType","localeCompare","combineReducers","search","searchReducer","weather","weatherReducer","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Footer","props","className","serializeErrors","errors","undefined","response","data","reduce","acc","val","message","substring","url","process","BACKEND_URL","connect","retrieveCity","dispatch","a","axios","post","backendURL","console","log","data-testid","onClick","result","details","aria-hidden","Spinner","searchState","length","r","i","searchCounter","resetSearch","setQuery","searchItem","counter","value","placeholder","onChange","event","target","setTimeout","updateTime","useEffect","timer","setInterval","clearInterval","is_day","alt","src","weather_icon","temperature","sunrise","sunset","epoch","date","Date","getHours","toString","padStart","getMinutes","currentTime","weatherState","series","options","chart","id","xaxis","categories","height","sortTable","handleTableSort","generateSortIcon","visibility","Landing","PageNotFound","App","exact","path","component","LandingPage","from","to","ReactDOM","render","history","document","getElementById"],"mappings":"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","file":"static/js/main.30aa6e28.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","// SEARCH\r\nexport const SEARCH = 'SEARCH';\r\nexport const SEARCH_SET_QUERY = 'SEARCH_SET_QUERY';\r\nexport const SEARCH_RESET = 'SEARCH_RESET';\r\n\r\n// CURRENT\r\nexport const RETRIEVE_CITY = 'RETRIEVE_CITY';\r\nexport const UPDATE_TIME = 'UPDATE_TIME';\r\n\r\n// TABLE\r\nexport const TABLE_SORT_BY = 'TABLE_SORT_BY';\r\n","import {\r\n  SEARCH,\r\n  SEARCH_RESET,\r\n  SEARCH_SET_QUERY\r\n} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n  isSearching: false,\r\n  showResults: false,\r\n  results: [],\r\n  query: '',\r\n  error: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH:\r\n      return {\r\n        ...state,\r\n        isSearching: action.payload.isSearching,\r\n        showResults: state.query === '' ? false : action.payload.showResults,\r\n        error: action.payload.error,\r\n        results: [...action.payload.results]\r\n      };\r\n\r\n    case SEARCH_SET_QUERY:\r\n      return { ...state, query: action.payload.query };\r\n\r\n    case SEARCH_RESET:\r\n      return { ...initialState };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  RETRIEVE_CITY,\r\n  UPDATE_TIME,\r\n  TABLE_SORT_BY\r\n} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n  cities: [],\r\n  table: {\r\n    sortBy: 'name',\r\n    order: 'asc',\r\n    entries: []\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RETRIEVE_CITY: {\r\n      if (state.cities.find((city) => city.name === action.payload.city.name))\r\n        return { ...state };\r\n\r\n      return {\r\n        ...state,\r\n        cities: [...state.cities, action.payload.city],\r\n        table: {\r\n          ...state.table,\r\n          entries: [...state.table.entries, action.payload.city]\r\n        }\r\n      };\r\n    }\r\n\r\n    case UPDATE_TIME: {\r\n      const cities = state.cities.map((city) =>\r\n        city.name === action.payload.name\r\n          ? { ...city, time: city.time + 60000 }\r\n          : city\r\n      );\r\n\r\n      return { ...state, cities };\r\n    }\r\n\r\n    case TABLE_SORT_BY: {\r\n      let column = action.payload.column || state.table.sortBy;\r\n      const order = action.payload.column\r\n        ? state.table.order === 'asc'\r\n          ? 'desc'\r\n          : 'asc'\r\n        : state.table.order;\r\n\r\n      if (column === 'sunset' || column === 'sunrise') {\r\n        column += '_epoch';\r\n      }\r\n\r\n      const sortedArray = [...state.table.entries].sort((city1, city2) => {\r\n        const dataType = typeof city1[column];\r\n\r\n        if (order === 'asc') {\r\n          if (dataType === 'string')\r\n            return city1[column].localeCompare(city2[column]);\r\n          if (dataType === 'number') return city1[column] - city2[column];\r\n        } else {\r\n          if (dataType === 'string')\r\n            return city2[column].localeCompare(city1[column]);\r\n          if (dataType === 'number') return city2[column] - city1[column];\r\n        }\r\n\r\n        return 0;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        table: { sortBy: column, order, entries: sortedArray }\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport searchReducer from './search-reducer';\r\nimport weatherReducer from './weather-reducer';\r\n\r\nexport default combineReducers({\r\n  search: searchReducer,\r\n  weather: weatherReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/root-reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import './footer.css';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div className=\"page-footer\">\r\n      <div>Vasco Maia</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const serializeErrors = (error) => {\r\n  let errors = undefined;\r\n\r\n  if (error.response && error.response.data && error.response.data.errors) {\r\n    const response = error.response.data.errors;\r\n    errors = response\r\n      .reduce((acc, val) => (acc += `, ${val.message}`), '')\r\n      .substring(2);\r\n  } else {\r\n    errors = 'Something went wrong';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default serializeErrors;\r\n","const url = process.env.BACKEND_URL || 'http://127.0.0.1:5000';\r\n\r\nexport default url;\r\n","import { connect } from 'react-redux';\r\nimport { retrieveCity } from '../../redux/actions/weather-actions';\r\nimport './search.css';\r\n\r\nconst ResultItem = (props) => {\r\n  return (\r\n    <div\r\n      data-testid=\"search-result-item\"\r\n      className=\"search-result-item\"\r\n      onClick={() =>\r\n        props.retrieveCity(`${props.result.name}, ${props.result.details}`)\r\n      }\r\n    >\r\n      <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n      <div className=\"search-results-details-wrapper\">\r\n        <div className=\"search-result-name\">{props.result.name}</div>\r\n        <div className=\"search-result-details\">{props.result.details}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { retrieveCity })(ResultItem);\r\n","import axios from 'axios';\r\nimport {\r\n  RETRIEVE_CITY,\r\n  SEARCH_RESET,\r\n  UPDATE_TIME,\r\n  TABLE_SORT_BY\r\n} from './action-types';\r\nimport serializeErrors from '../../util/serialize-errors';\r\nimport backendURL from '../../backendURL';\r\n\r\nexport const retrieveCity = (query) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${backendURL}/current`, { query });\r\n\r\n    dispatch({\r\n      type: RETRIEVE_CITY,\r\n      payload: {\r\n        city: { ...response.data }\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: TABLE_SORT_BY,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    console.log(serializeErrors(err));\r\n  } finally {\r\n    dispatch({\r\n      type: SEARCH_RESET,\r\n      payload: {}\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateTime = (name) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      name\r\n    }\r\n  });\r\n};\r\n\r\nexport const sortTable = (column) => (dispatch) => {\r\n  dispatch({\r\n    type: TABLE_SORT_BY,\r\n    payload: {\r\n      column\r\n    }\r\n  });\r\n};\r\n","import './spinner.css';\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className=\"spinner-wrapper\" data-testid=\"spinner-wrapper\">\r\n      <i className=\"fa fa-spinner\" aria-hidden=\"true\"></i>\r\n      <span>Searching</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import ResultItem from './result-item';\r\nimport Spinner from '../spinner/spinner';\r\nimport { connect } from 'react-redux';\r\nimport './search.css';\r\n\r\nconst ResultList = (props) => {\r\n  return (\r\n    <div data-testid=\"search-result-list\" className=\"search-result-list\">\r\n      {props.searchState.isSearching ? (\r\n        <Spinner />\r\n      ) : props.searchState.error !== '' ? (\r\n        <span>{props.searchState.error}</span>\r\n      ) : props.searchState.results.length === 0 ? (\r\n        <span>No results found</span>\r\n      ) : (\r\n        <>\r\n          {props.searchState.results.map((r, i) => {\r\n            return <ResultItem key={i} result={r} />;\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { searchState: state.search };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ResultList);\r\n","import ResultList from './result-list';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  search,\r\n  resetSearch,\r\n  setQuery\r\n} from '../../redux/actions/search-actions';\r\n\r\nimport './search.css';\r\n\r\nlet searchCounter = 0;\r\n\r\nconst Search = (props) => {\r\n  const handleSearchItem = (event) => {\r\n    const value = event.target.value;\r\n\r\n    props.setQuery(value);\r\n\r\n    if (value.length <= 3) {\r\n      return;\r\n    }\r\n\r\n    if (value.length === 0 || value === '') {\r\n      props.resetSearch();\r\n      return;\r\n    }\r\n\r\n    searchCounter++;\r\n    const counter = searchCounter;\r\n\r\n    setTimeout(() => {\r\n      searchItem(counter, value);\r\n    }, 750);\r\n  };\r\n\r\n  const searchItem = (counter, value) => {\r\n    if (counter === searchCounter) {\r\n      props.search(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      data-testid=\"search-wrapper\"\r\n      className={`search-wrapper ${\r\n        props.searchState.showResults ? 'search-wrapper-with-results' : ''\r\n      }`}\r\n    >\r\n      <input\r\n        data-testid=\"search-input\"\r\n        className=\"search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Find the weather in your city\"\r\n        onChange={handleSearchItem}\r\n        value={props.searchState.query}\r\n      />\r\n      <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\r\n\r\n      {props.searchState.showResults ? <ResultList /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { searchState: state.search };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  search,\r\n  resetSearch,\r\n  setQuery\r\n})(Search);\r\n","import axios from 'axios';\r\nimport { SEARCH, SEARCH_RESET, SEARCH_SET_QUERY } from './action-types';\r\nimport serializeErrors from '../../util/serialize-errors';\r\nimport backendURL from '../../backendURL';\r\n\r\nexport const search = (query) => async (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH,\r\n    payload: {\r\n      isSearching: true,\r\n      showResults: true,\r\n      error: '',\r\n      results: []\r\n    }\r\n  });\r\n\r\n  try {\r\n    const response = await axios.post(`${backendURL}/search`, {\r\n      query\r\n    });\r\n\r\n    dispatch({\r\n      type: SEARCH,\r\n      payload: {\r\n        isSearching: false,\r\n        showResults: true,\r\n        error: '',\r\n        results: response.data.results\r\n      }\r\n    });\r\n  } catch (err) {\r\n    const error = serializeErrors(err);\r\n\r\n    if (error) {\r\n      dispatch({\r\n        type: SEARCH,\r\n        payload: {\r\n          isSearching: false,\r\n          showResults: true,\r\n          error,\r\n          results: []\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const resetSearch = () => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_RESET,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const setQuery = (query) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_SET_QUERY,\r\n    payload: {\r\n      query\r\n    }\r\n  });\r\n};\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateTime } from '../../redux/actions/weather-actions';\r\nimport './card.css';\r\n\r\nconst Card = (props) => {\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      props.updateTime(props.city.name);\r\n    }, 60000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const currentTime = (epoch) => {\r\n    const date = new Date(epoch);\r\n\r\n    return `${date.getHours().toString().padStart(2, '0')}:${date\r\n      .getMinutes()\r\n      .toString()\r\n      .padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      data-testid={'weather-card-wrapper'}\r\n      className={`weather-card ${\r\n        props.city.is_day === 1 ? 'weather-card-day' : 'weather-card-night'\r\n      }`}\r\n    >\r\n      <div className=\"weather-card-top-section\">\r\n        <img\r\n          alt=\"weather icon\"\r\n          src={`/assets/weather-icons/${\r\n            props.city.is_day === 1 ? 'day' : 'night'\r\n          }/${props.city.weather_icon}`}\r\n        />\r\n        <span>{`${props.city.temperature}ºC`}</span>\r\n      </div>\r\n\r\n      <div className=\"weather-card-condition\">\r\n        <span>{props.city.weather}</span>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"weather-card-location-section\">\r\n        <div>{props.city.name}</div>\r\n        <div>{props.city.details}</div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"weather-card-details-section\">\r\n        <div>\r\n          <span>Sunrise</span>\r\n          <br />\r\n          <span>{props.city.sunrise}</span>\r\n        </div>\r\n        <div>\r\n          <span>Sunset</span>\r\n          <br />\r\n          <span>{props.city.sunset}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"weather-card-time-section\">{`Current time: ${currentTime(\r\n        props.city.time\r\n      )}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { updateTime })(Card);\r\n","import { connect } from 'react-redux';\r\nimport Card from './card';\r\nimport './card.css';\r\n\r\nconst CardList = (props) => {\r\n  return props.weatherState.cities.map((city, i) => {\r\n    return <Card key={i} city={city} />;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weatherState: state.weather };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CardList);\r\n","import Chart from 'react-apexcharts';\r\nimport { connect } from 'react-redux';\r\nimport './graph.css';\r\n\r\nconst Graph = (props) => {\r\n  const series = [\r\n    {\r\n      name: 'Temperature',\r\n      data: props.weatherState.cities.map((city) => city.temperature)\r\n    }\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'barchart'\r\n    },\r\n    xaxis: {\r\n      categories: props.weatherState.cities.map((city) => city.name)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"graph-wrapper\" className=\"graph-wrapper\">\r\n      {props.weatherState.cities.length !== 0 ? (\r\n        <Chart series={series} options={options} type=\"bar\" height=\"250px\" />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weatherState: state.weather };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Graph);\r\n","import { connect } from 'react-redux';\r\nimport { sortTable } from '../../redux/actions/weather-actions';\r\nimport './table.css';\r\n\r\nconst Table = (props) => {\r\n  const handleTableSort = (column) => {\r\n    props.sortTable(column);\r\n  };\r\n\r\n  const generateSortIcon = (column) => {\r\n    let order = 'asc';\r\n    let visibility = 'table-selected-icon-invisible';\r\n\r\n    if (props.weatherState.table.sortBy === column) {\r\n      order = props.weatherState.table.order;\r\n      visibility = 'table-selected-icon-visible';\r\n    }\r\n\r\n    return (\r\n      <i\r\n        className={`fa fa-sort-amount-${order} ${visibility}`}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    );\r\n  };\r\n\r\n  return props.weatherState.table.entries.length !== 0 ? (\r\n    <div data-testid=\"table-wrapper\" className=\"table-wrapper\">\r\n      <table data-testid=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleTableSort('name')}>\r\n              City\r\n              {generateSortIcon('name')}\r\n            </th>\r\n            <th onClick={() => handleTableSort('details')}>\r\n              Location\r\n              {generateSortIcon('details')}\r\n            </th>\r\n            <th onClick={() => handleTableSort('temperature')}>\r\n              Temperature (ºC)\r\n              {generateSortIcon('temperature')}\r\n            </th>\r\n            <th onClick={() => handleTableSort('sunrise')}>\r\n              Sunrise\r\n              {generateSortIcon('sunrise')}\r\n            </th>\r\n            <th onClick={() => handleTableSort('sunset')}>\r\n              Sunset\r\n              {generateSortIcon('sunset')}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.weatherState.table.entries.map((city, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{city.name}</td>\r\n                <td>{city.details}</td>\r\n                <td>{city.temperature}</td>\r\n                <td>{city.sunrise}</td>\r\n                <td>{city.sunset}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weatherState: state.weather };\r\n};\r\n\r\nexport default connect(mapStateToProps, { sortTable })(Table);\r\n","import SearchBar from '../../components/search/search';\r\nimport WeatherCardList from '../../components/weather-card/card-list';\r\nimport WeatherGraph from '../../components/graph/graph';\r\nimport WeatherTable from '../../components/table/table';\r\n\r\nimport './landing.css';\r\n\r\nconst Landing = (props) => {\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <div className=\"landing-info-container\">\r\n        <WeatherCardList />\r\n      </div>\r\n      <div className=\"landing-info-container\">\r\n        <WeatherTable />\r\n        <WeatherGraph />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import './pageNotFound.css';\r\n\r\nconst PageNotFound = (props) => {\r\n  return (\r\n    <div className=\"error-page-container\">\r\n      <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n      <p>The page you are looking for does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport './app.css';\r\n\r\nimport Footer from '../footer/Footer';\r\n\r\nimport LandingPage from '../../pages/landing/Landing';\r\nimport PageNotFound from '../../pages/pageNotFound/PageNotFound';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/404\" component={PageNotFound} />\r\n          <Redirect from=\"*\" to=\"/404\" />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport history from './history';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/store';\r\nimport App from './components/app/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}